<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

	<description>Example job to get you started. It provides a skeleton for a typical batch application.</description>


	<import resource="classpath:/launch-context.xml" />

	<mybatis:scan base-package="com.sample.gradle.springbatch.common.mapper"
	              factory-ref="sqlSessionFactory"
	 />

	<!--
	<bean id="UsersMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.sample.gradle.springbatch.common.mapper.UsersMapper"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	-->
	<batch:job id="job6" job-repository="jobRepository">
		<batch:listeners>
			<batch:listener ref="CommonListener"/>
		</batch:listeners>
		<batch:step id="step1"  >
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<batch:chunk reader="csvFileReader" processor="TUserInfoProcessor" writer="dbWriter" commit-interval="10000" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- readerの設定 -->
	<bean id="csvFileReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters[infile]}" />
		<property name="encoding" value="${app.file.reader.encoding}"/>
		<property name="strict" value="${app.file.reader.strict}"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="${app.job6.file.input.header}" />
						<property name="delimiter" value="${app.job6.file.writer.delimiter}" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="com.sample.gradle.springbatch.job6.entity.PersonalInfomationEntity" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- processorの設定 -->
	<bean id="TUserInfoProcessor" class="com.sample.gradle.springbatch.job6.processor.TUserInfoProcessor" scope="step">
	</bean>

	<!-- writerの設定 -->
	<!-- scopeをstepに設定しないとEL1008Eのエラーが出るらしい。 -->
	<bean id="dbWriter" class="org.mybatis.spring.batch.MyBatisBatchItemWriter" scope="step">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<property name="statementId" value="com.sample.gradle.springbatch.common.mapper.TUserInfoMapper.insert"/>
	</bean>

	<bean id="CommonListener" class="com.sample.gradle.springbatch.common.JobListener">
		<property name="jobName" value="job6"/>
	</bean>

</beans>
